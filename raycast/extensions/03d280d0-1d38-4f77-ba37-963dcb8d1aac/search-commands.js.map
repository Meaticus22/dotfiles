{
  "version": 3,
  "sources": ["../src/search-commands.tsx", "../src/utils.ts", "../src/alias.json", "../src/command-detail.tsx"],
  "sourcesContent": ["import { Action, ActionPanel, List } from \"@raycast/api\";\nimport { getData, typeColor, showDescription } from \"./utils\";\nimport CommandDetail from \"./command-detail\";\n\nexport default function Command() {\n  const aliases = getData();\n\n  return (\n    <List searchBarPlaceholder=\"Search for commands or aliases ...\">\n      {aliases.map((alias) => {\n        return (\n          <List.Item\n            key={alias.name}\n            title={{ value: alias.command, tooltip: alias.command }}\n            subtitle={showDescription ? { value: alias.description, tooltip: alias.description } : undefined}\n            accessories={[{ tag: { value: alias.name, color: typeColor(alias.type) }, tooltip: alias.command }]}\n            actions={\n              <ActionPanel>\n                <ActionPanel.Section title=\"Alias\">\n                  <Action.CopyToClipboard title=\"Copy Alias\" content={alias.name} />\n                  <Action.CopyToClipboard title=\"Paste Alias\" content={alias.name} />\n                </ActionPanel.Section>\n\n                <ActionPanel.Section title=\"Command\">\n                  <Action.CopyToClipboard\n                    title=\"Copy Command\"\n                    content={alias.command}\n                    shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"c\" }}\n                  />\n                  <Action.Paste\n                    title=\"Paste Command\"\n                    content={alias.command}\n                    shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"p\" }}\n                  />\n                </ActionPanel.Section>\n\n                <ActionPanel.Section title=\"Reference\">\n                  <Action.Push\n                    title=\"See Description\"\n                    target={<CommandDetail alias={alias} />}\n                    shortcut={{ modifiers: [\"cmd\"], key: \"o\" }}\n                  />\n                  <Action.OpenInBrowser\n                    title=\"Open Git Plugin\"\n                    url=\"https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/README.md\"\n                  />\n                </ActionPanel.Section>\n              </ActionPanel>\n            }\n          />\n        );\n      })}\n    </List>\n  );\n}\n", "import { Color, getPreferenceValues } from \"@raycast/api\";\nimport { default as data } from \"./alias.json\";\nimport { Alias, AliasType } from \"./types\";\n\nconst preferences = getPreferenceValues();\nexport const showDescription = preferences.ItemAliasShowDescription;\nexport const showTypeColor = preferences.ItemAliasTypeColor;\n\nexport function getData() {\n  return data as Alias[];\n}\n\nexport function typeColor(type: AliasType) {\n  if (!showTypeColor) {\n    return Color.SecondaryText;\n  }\n\n  return {\n    show: Color.Blue,\n    default: Color.Yellow,\n    delete: Color.Red,\n  }[type];\n}\n\nexport function typeDescription(type: AliasType) {\n  return {\n    show: \"The command only shows information, no changes are made.\",\n    default: \"The command can edit, move or delete files.\",\n    delete: \"The command is directly related to the deletion information.\",\n  }[type];\n}\n", "[\n  {\n    \"name\": \"g\",\n    \"command\": \"git\",\n    \"type\": \"show\",\n    \"description\": \"The base command for all git commands.\"\n  },\n  {\n    \"name\": \"ga\",\n    \"command\": \"git add\",\n    \"type\": \"default\",\n    \"description\": \"Adds file(s) to the staging area for version control.\"\n  },\n  {\n    \"name\": \"gaa\",\n    \"command\": \"git add --all\",\n    \"type\": \"default\",\n    \"description\": \"Adds all file(s), including untracked and deleted files, to the staging area for version control.\"\n  },\n  {\n    \"name\": \"gapa\",\n    \"command\": \"git add --patch\",\n    \"type\": \"default\",\n    \"description\": \"Interactively choose hunks of patch to add to the index.\"\n  },\n  {\n    \"name\": \"gau\",\n    \"command\": \"git add --update\",\n    \"type\": \"default\",\n    \"description\": \"Add file modifications and deletions to the staging area.\"\n  },\n  {\n    \"name\": \"gav\",\n    \"command\": \"git add --verbose\",\n    \"type\": \"default\",\n    \"description\": \"Add files to the staging area with verbose output.\"\n  },\n  {\n    \"name\": \"gwip\",\n    \"command\": \"git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m \\\"--wip-- [skip ci]\\\"\",\n    \"type\": \"default\",\n    \"description\": \"Save all changes to a new commit with a message indicating 'work in progress'.\"\n  },\n  {\n    \"name\": \"gam\",\n    \"command\": \"git am\",\n    \"type\": \"default\",\n    \"description\": \"Apply a series of patches from a mailbox.\"\n  },\n  {\n    \"name\": \"gama\",\n    \"command\": \"git am --abort\",\n    \"type\": \"default\",\n    \"description\": \"Abort the git am command and restore the state before applying the patches.\"\n  },\n  {\n    \"name\": \"gamc\",\n    \"command\": \"git am --continue\",\n    \"type\": \"default\",\n    \"description\": \"Continue applying patches after resolving conflicts.\"\n  },\n  {\n    \"name\": \"gamscp\",\n    \"command\": \"git am --show-current-patch\",\n    \"type\": \"show\",\n    \"description\": \"Show the current patch being applied by git am.\"\n  },\n  {\n    \"name\": \"gams\",\n    \"command\": \"git am --skip\",\n    \"type\": \"default\",\n    \"description\": \"Skip the current patch and continue applying the rest of the patches.\"\n  },\n  {\n    \"name\": \"gap\",\n    \"command\": \"git apply\",\n    \"type\": \"default\",\n    \"description\": \"Apply a patch to files and make changes to the working tree.\"\n  },\n  {\n    \"name\": \"gapt\",\n    \"command\": \"git apply --3way\",\n    \"type\": \"default\",\n    \"description\": \"Apply a patch that handles threeway merges if the patch does not apply cleanly.\"\n  },\n  {\n    \"name\": \"gbs\",\n    \"command\": \"git bisect\",\n    \"type\": \"show\",\n    \"description\": \"Use binary search to find the commit that introduced a bug.\"\n  },\n  {\n    \"name\": \"gbsb\",\n    \"command\": \"git bisect bad\",\n    \"type\": \"default\",\n    \"description\": \"Mark a revison as bad (contains the bug).\"\n  },\n  {\n    \"name\": \"gbsg\",\n    \"command\": \"git bisect good\",\n    \"type\": \"default\",\n    \"description\": \"Mark a revison as good (does not contain the bug).\"\n  },\n  {\n    \"name\": \"gbsr\",\n    \"command\": \"git bisect reset\",\n    \"type\": \"default\",\n    \"description\": \"Exit the bisecting state and return to the original branch.\"\n  },\n  {\n    \"name\": \"gbss\",\n    \"command\": \"git bisect start\",\n    \"type\": \"default\",\n    \"description\": \"Start the bisecting process to find the commit that introduced a bug.\"\n  },\n  {\n    \"name\": \"gbl\",\n    \"command\": \"git blame -b -w\",\n    \"type\": \"show\",\n    \"description\": \"Show what revision and author last modified each line of a file.\"\n  },\n  {\n    \"name\": \"gb\",\n    \"command\": \"git branch\",\n    \"type\": \"show\",\n    \"description\": \"List, create, or delete branches.\"\n  },\n  {\n    \"name\": \"gbda\",\n    \"command\": \"git branch --no-color --merged | command grep -vE \\\"^([+*]|\\\\s*($(git_main_branch)|$(git_develop_branch))\\\\s*$)\\\" | command xargs git branch -d 2>/dev/null\",\n    \"type\": \"delete\",\n    \"description\": \"Delete all branches that have been merged, except for the main branch and the develop branch.\"\n  },\n  {\n    \"name\": \"gbnm\",\n    \"command\": \"git branch --no-merged\",\n    \"type\": \"show\",\n    \"description\": \"List branches that have not been merged into the current branch.\"\n  },\n  {\n    \"name\": \"gbr\",\n    \"command\": \"git branch --remote\",\n    \"type\": \"show\",\n    \"description\": \"List remote branches.\"\n  },\n  {\n    \"name\": \"gba\",\n    \"command\": \"git branch -a\",\n    \"type\": \"show\",\n    \"description\": \"List all branches, including remote branches.\"\n  },\n  {\n    \"name\": \"gbd\",\n    \"command\": \"git branch -d\",\n    \"type\": \"delete\",\n    \"description\": \"Delete a branch (only if it has been fully merged).\"\n  },\n  {\n    \"name\": \"gbD\",\n    \"command\": \"git branch -D\",\n    \"type\": \"delete\",\n    \"description\": \"Delete a branch (even if it has unmerged changes) forcibly.\"\n  },\n  {\n    \"name\": \"gco\",\n    \"command\": \"git checkout\",\n    \"type\": \"default\",\n    \"description\": \"Switch to a branch or restore files in the working tree.\"\n  },\n  {\n    \"name\": \"gcor\",\n    \"command\": \"git checkout --recurse-submodules\",\n    \"type\": \"default\",\n    \"description\": \"Switch to a branch or restore files in the working tree, including submodules.\"\n  },\n  {\n    \"name\": \"gcb\",\n    \"command\": \"git checkout -b\",\n    \"type\": \"default\",\n    \"description\": \"Create and switch to a new branch.\"\n  },\n  {\n    \"name\": \"gcd\",\n    \"command\": \"git checkout $(git config gitflow.branch.develop)\",\n    \"type\": \"default\",\n    \"description\": \"Switch to the develop branch.\"\n  },\n  {\n    \"name\": \"gch\",\n    \"command\": \"git checkout $(git config gitflow.prefix.hotfix)\",\n    \"type\": \"default\",\n    \"description\": \"Switch to a hotfix branch.\"\n  },\n  {\n    \"name\": \"gcr\",\n    \"command\": \"git checkout $(git config gitflow.prefix.release)\",\n    \"type\": \"default\",\n    \"description\": \"Switch to a release branch.\"\n  },\n  {\n    \"name\": \"gcm\",\n    \"command\": \"git checkout $(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Switch to the main branch.\"\n  },\n  {\n    \"name\": \"gcp\",\n    \"command\": \"git cherry-pick\",\n    \"type\": \"default\",\n    \"description\": \"Apply a commit from another branch.\"\n  },\n  {\n    \"name\": \"gcpa\",\n    \"command\": \"git cherry-pick --abort\",\n    \"type\": \"default\",\n    \"description\": \"Abort the cherry-pick operation and restore the original branch state.\"\n  },\n  {\n    \"name\": \"gcpc\",\n    \"command\": \"git cherry-pick --continue\",\n    \"type\": \"default\",\n    \"description\": \"Continue the cherry-pick operation after resolving conflicts.\"\n  },\n  {\n    \"name\": \"gclean\",\n    \"command\": \"git clean -id\",\n    \"type\": \"default\",\n    \"description\": \"Interactive cleanup of the working directory by removing untracked files and directories.\"\n  },\n  {\n    \"name\": \"gcl\",\n    \"command\": \"git clone --recurse-submodules\",\n    \"type\": \"default\",\n    \"description\": \"Clone a repository and its submodules.\"\n  },\n  {\n    \"name\": \"gcam\",\n    \"command\": \"git commit -a -m\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a commit message.\"\n  },\n  {\n    \"name\": \"gcas\",\n    \"command\": \"git commit -a -s\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a signed commit.\"\n  },\n  {\n    \"name\": \"gcasm\",\n    \"command\": \"git commit -a -s -m\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a signed commit and a commit message.\"\n  },\n  {\n    \"name\": \"gcmsg\",\n    \"command\": \"git commit -m\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a commit message.\"\n  },\n  {\n    \"name\": \"gcs\",\n    \"command\": \"git commit -S\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a signed commit.\"\n  },\n  {\n    \"name\": \"gcsm\",\n    \"command\": \"git commit -s -m\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a signed commit and a commit message.\"\n  },\n  {\n    \"name\": \"gcss\",\n    \"command\": \"git commit -S -s\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a signed commit and a signed-off-by line.\"\n  },\n  {\n    \"name\": \"gcssm\",\n    \"command\": \"git commit -S -s -m\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository with a signed commit, a signed-off-by line, and a commit message.\"\n  },\n  {\n    \"name\": \"gc\",\n    \"command\": \"git commit -v\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository.\"\n  },\n  {\n    \"name\": \"gc!\",\n    \"command\": \"git commit -v --amend\",\n    \"type\": \"default\",\n    \"description\": \"Amend the last commit with the current changes.\"\n  },\n  {\n    \"name\": \"gcn\",\n    \"command\": \"git commit -v --no-edit\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository without editing the commit message.\"\n  },\n  {\n    \"name\": \"gcn!\",\n    \"command\": \"git commit -v --no-edit --amend\",\n    \"type\": \"default\",\n    \"description\": \"Amend the last commit without editing the commit message.\"\n  },\n  {\n    \"name\": \"gca\",\n    \"command\": \"git commit -v -a\",\n    \"type\": \"default\",\n    \"description\": \"Record changes to the repository (including file deletions) without staging explicitly.\"\n  },\n  {\n    \"name\": \"gca!\",\n    \"command\": \"git commit -v -a --amend\",\n    \"type\": \"default\",\n    \"description\": \"Amend the last commit with the current changes, including file deletions.\"\n  },\n  {\n    \"name\": \"gcan!\",\n    \"command\": \"git commit -v -a --no-edit --amend\",\n    \"type\": \"default\",\n    \"description\": \"Amend the last commit without editing the commit message.\"\n  },\n  {\n    \"name\": \"gcans!\",\n    \"command\": \"git commit -v -a -s --no-edit --amend\",\n    \"type\": \"default\",\n    \"description\": \"Amend the last commit as a signed commit without editing the commit message.\"\n  },\n  {\n    \"name\": \"gcf\",\n    \"command\": \"git config --list\",\n    \"type\": \"show\",\n    \"description\": \"List all Git configuration settings.\"\n  },\n  {\n    \"name\": \"gd\",\n    \"command\": \"git diff\",\n    \"type\": \"show\",\n    \"description\": \"Show changes between commits, commit and working tree, etc.\"\n  },\n  {\n    \"name\": \"gdca\",\n    \"command\": \"git diff --cached\",\n    \"type\": \"show\",\n    \"description\": \"Show changes between the index and the previous commit.\"\n  },\n  {\n    \"name\": \"gdcw\",\n    \"command\": \"git diff --cached --word-diff\",\n    \"type\": \"show\",\n    \"description\": \"Show word diff between the index and the previous commit.\"\n  },\n  {\n    \"name\": \"gds\",\n    \"command\": \"git diff --staged\",\n    \"type\": \"show\",\n    \"description\": \"Show the differences between the staged changes and the previous commit.\"\n  },\n  {\n    \"name\": \"gdw\",\n    \"command\": \"git diff --word-diff\",\n    \"type\": \"show\",\n    \"description\": \"Show word diff between the working tree and the index or a tree.\"\n  },\n  {\n    \"name\": \"gdup\",\n    \"command\": \"git diff @{upstream}\",\n    \"type\": \"show\",\n    \"description\": \"Show changes between the working tree and the upstream branch.\"\n  },\n  {\n    \"name\": \"gdt\",\n    \"command\": \"git diff-tree --no-commit-id --name-only -r\",\n    \"type\": \"show\",\n    \"description\": \"Show changes between two tree objects (e.g., between commits and trees).\"\n  },\n  {\n    \"name\": \"gf\",\n    \"command\": \"git fetch\",\n    \"type\": \"default\",\n    \"description\": \"Download objects and refs from a remote repository.\"\n  },\n  {\n    \"name\": \"gfo\",\n    \"command\": \"git fetch origin\",\n    \"type\": \"default\",\n    \"description\": \"Download objects and refs from the origin remote repository.\"\n  },\n  {\n    \"name\": \"gfl\",\n    \"command\": \"git flow\",\n    \"type\": \"show\",\n    \"description\": \"A collection of Git extensions for high-level repository operations.\"\n  },\n  {\n    \"name\": \"gflf\",\n    \"command\": \"git flow feature\",\n    \"type\": \"show\",\n    \"description\": \"Manage feature branches.\"\n  },\n  {\n    \"name\": \"gflff\",\n    \"command\": \"git flow feature finish\",\n    \"type\": \"default\",\n    \"description\": \"Finish a feature branch and merge it into the develop branch.\"\n  },\n  {\n    \"name\": \"gflffc\",\n    \"command\": \"git flow feature finish ${$(git_current_branch)#feature/}\",\n    \"type\": \"default\",\n    \"description\": \"Finish the current feature branch and merge it into the develop branch.\"\n  },\n  {\n    \"name\": \"gflfp\",\n    \"command\": \"git flow feature publish\",\n    \"type\": \"default\",\n    \"description\": \"Publish a feature branch to the remote repository.\"\n  },\n  {\n    \"name\": \"gflfpc\",\n    \"command\": \"git flow feature publish ${$(git_current_branch)#feature/}\",\n    \"type\": \"default\",\n    \"description\": \"Publish the current feature branch to the remote repository.\"\n  },\n  {\n    \"name\": \"gflfpll\",\n    \"command\": \"git flow feature pull\",\n    \"type\": \"default\",\n    \"description\": \"Pull the latest changes of a feature branch from the remote repository.\"\n  },\n  {\n    \"name\": \"gflfs\",\n    \"command\": \"git flow feature start\",\n    \"type\": \"default\",\n    \"description\": \"Start a new feature branch.\"\n  },\n  {\n    \"name\": \"gflh\",\n    \"command\": \"git flow hotfix\",\n    \"type\": \"show\",\n    \"description\": \"Start a hotfix branch in Git Flow.\"\n  },\n  {\n    \"name\": \"gflhf\",\n    \"command\": \"git flow hotfix finish\",\n    \"type\": \"default\",\n    \"description\": \"Finish a hotfix branch and merge it into the main branch.\"\n  },\n  {\n    \"name\": \"gflhfc\",\n    \"command\": \"git flow hotfix finish ${$(git_current_branch)#hotfix/}\",\n    \"type\": \"default\",\n    \"description\": \"Finish the current hotfix branch and merge it into the main branch.\"\n  },\n  {\n    \"name\": \"gflhp\",\n    \"command\": \"git flow hotfix publish\",\n    \"type\": \"default\",\n    \"description\": \"Publish a hotfix branch to the remote repository.\"\n  },\n  {\n    \"name\": \"gflhpc\",\n    \"command\": \"git flow hotfix publish ${$(git_current_branch)#hotfix/}\",\n    \"type\": \"default\",\n    \"description\": \"Publish the current hotfix branch to the remote repository.\"\n  },\n  {\n    \"name\": \"gflhs\",\n    \"command\": \"git flow hotfix start\",\n    \"type\": \"default\",\n    \"description\": \"Start a new hotfix branch.\"\n  },\n  {\n    \"name\": \"gfli\",\n    \"command\": \"git flow init\",\n    \"type\": \"default\",\n    \"description\": \"Initialize a new repository with GitFlow.\"\n  },\n  {\n    \"name\": \"gflr\",\n    \"command\": \"git flow release\",\n    \"type\": \"default\",\n    \"description\": \"Manage release branches.\"\n  },\n  {\n    \"name\": \"gflrf\",\n    \"command\": \"git flow release finish\",\n    \"type\": \"default\",\n    \"description\": \"Finish a release branch and merge it into the main and develop branches.\"\n  },\n  {\n    \"name\": \"gflrfc\",\n    \"command\": \"git flow release finish ${$(git_current_branch)#release/}\",\n    \"type\": \"default\",\n    \"description\": \"Finish the current release branch and merge it into the main and develop branches.\"\n  },\n  {\n    \"name\": \"gflrp\",\n    \"command\": \"git flow release publish\",\n    \"type\": \"default\",\n    \"description\": \"Publish a release branch to the remote repository.\"\n  },\n  {\n    \"name\": \"gflrpc\",\n    \"command\": \"git flow release publish ${$(git_current_branch)#release/}\",\n    \"type\": \"default\",\n    \"description\": \"Publish the current release branch to the remote repository.\"\n  },\n  {\n    \"name\": \"gflrs\",\n    \"command\": \"git flow release start\",\n    \"type\": \"default\",\n    \"description\": \"Start a new release branch.\"\n  },\n  {\n    \"name\": \"gg\",\n    \"command\": \"git gui citool\",\n    \"type\": \"default\",\n    \"description\": \"Open a graphical commit tool for selecting changes to commit.\"\n  },\n  {\n    \"name\": \"gga\",\n    \"command\": \"git gui citool --amend\",\n    \"type\": \"default\",\n    \"description\": \"Open a graphical commit tool to amend the last commit.\"\n  },\n  {\n    \"name\": \"ghh\",\n    \"command\": \"git help\",\n    \"type\": \"show\",\n    \"description\": \"Display help information about Git.\"\n  },\n  {\n    \"name\": \"glgg\",\n    \"command\": \"git log --graph\",\n    \"type\": \"show\",\n    \"description\": \"Show the commit history with an ASCII graph indicating branch and merge history.\"\n  },\n  {\n    \"name\": \"glgga\",\n    \"command\": \"git log --graph --decorate --all\",\n    \"type\": \"show\",\n    \"description\": \"Show the commit history with an ASCII graph indicating branch and merge history, and decorate references.\"\n  },\n  {\n    \"name\": \"glo\",\n    \"command\": \"git log --oneline --decorate\",\n    \"type\": \"show\",\n    \"description\": \"Show the commit history with one commit per line and decoration (e.g., branch, tag names).\"\n  },\n  {\n    \"name\": \"glog\",\n    \"command\": \"git log --oneline --decorate --graph\",\n    \"type\": \"show\",\n    \"description\": \"Show the commit history with one commit per line, decoration, and an ASCII graph.\"\n  },\n  {\n    \"name\": \"gloga\",\n    \"command\": \"git log --oneline --decorate --graph --all\",\n    \"type\": \"show\",\n    \"description\": \"Show the commit history (including all branches) with one commit per line, decoration, and an ASCII graph.\"\n  },\n  {\n    \"name\": \"glg\",\n    \"command\": \"git log --stat\",\n    \"type\": \"show\",\n    \"description\": \"Show the commit history with a diffstat.\"\n  },\n  {\n    \"name\": \"glgp\",\n    \"command\": \"git log --stat -p\",\n    \"type\": \"show\",\n    \"description\": \"Show the commit history with a diffstat and the full diff.\"\n  },\n  {\n    \"name\": \"gunwip\",\n    \"command\": \"git log -n 1 | grep -q -c \\\"\\\\--wip--\\\" && git reset HEAD~1\",\n    \"type\": \"show\",\n    \"description\": \"Cancel the last commit if its commit message contains \\\"--wip--\\\" (work in progress).\"\n  },\n  {\n    \"name\": \"gignored\",\n    \"command\": \"git ls-files -v | grep \\\"^[[:lower:]]\\\"\",\n    \"type\": \"show\",\n    \"description\": \"List ignored files.\"\n  },\n  {\n    \"name\": \"gfg\",\n    \"command\": \"git ls-files | grep\",\n    \"type\": \"show\",\n    \"description\": \"List tracked files matching a pattern.\"\n  },\n  {\n    \"name\": \"gm\",\n    \"command\": \"git merge\",\n    \"type\": \"default\",\n    \"description\": \"Join two or more development histories together.\"\n  },\n  {\n    \"name\": \"gma\",\n    \"command\": \"git merge --abort\",\n    \"type\": \"default\",\n    \"description\": \"Abort the merge operation and restore the original branch state.\"\n  },\n  {\n    \"name\": \"gmom\",\n    \"command\": \"git merge origin/$(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Merge changes from the main branch into the current branch.\"\n  },\n  {\n    \"name\": \"gmum\",\n    \"command\": \"git merge upstream/$(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Merge changes from an upstream main branch into the current branch.\"\n  },\n  {\n    \"name\": \"gmtl\",\n    \"command\": \"git mergetool --no-prompt\",\n    \"type\": \"default\",\n    \"description\": \"Run a merge conflict resolution tool to resolve conflicts.\"\n  },\n  {\n    \"name\": \"gl\",\n    \"command\": \"git pull\",\n    \"type\": \"default\",\n    \"description\": \"Fetch from and integrate with another repository or a local branch.\"\n  },\n  {\n    \"name\": \"gpr\",\n    \"command\": \"git pull --rebase\",\n    \"type\": \"default\",\n    \"description\": \"Fetch from the remote repository and rebase on top of the current branch.\"\n  },\n  {\n    \"name\": \"gup\",\n    \"command\": \"git pull --rebase\",\n    \"type\": \"default\",\n    \"description\": \"Fetch from the remote repository and rebase on top of the current branch.\"\n  },\n  {\n    \"name\": \"gupa\",\n    \"command\": \"git pull --rebase --autostash\",\n    \"type\": \"default\",\n    \"description\": \"Fetch from the remote repository and rebase on top of the current branch, automatically stashing local changes.\"\n  },\n  {\n    \"name\": \"gupav\",\n    \"command\": \"git pull --rebase --autostash -v\",\n    \"type\": \"default\",\n    \"description\": \"Fetch from the remote repository and rebase on top of the current branch with verbose output, automatically stashing local changes.\"\n  },\n  {\n    \"name\": \"gupv\",\n    \"command\": \"git pull --rebase -v\",\n    \"type\": \"default\",\n    \"description\": \"Fetch from the remote repository and rebase on top of the current branch with verbose output.\"\n  },\n  {\n    \"name\": \"gupom\",\n    \"command\": \"git pull --rebase origin $(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Fetch changes from the remote main branch and rebase on top of the current branch.\"\n  },\n  {\n    \"name\": \"ggpull\",\n    \"command\": \"git pull origin \\\"$(git_current_branch)\\\"\",\n    \"type\": \"default\",\n    \"description\": \"Pull changes from the remote repository for the current branch.\"\n  },\n  {\n    \"name\": \"gluc\",\n    \"command\": \"git pull upstream $(git_current_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Pull changes from an upstream repository for the current branch.\"\n  },\n  {\n    \"name\": \"glum\",\n    \"command\": \"git pull upstream $(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Pull changes from an upstream repository for the main branch.\"\n  },\n  {\n    \"name\": \"gp\",\n    \"command\": \"git push\",\n    \"type\": \"default\",\n    \"description\": \"Update remote refs along with the associated objects.\"\n  },\n  {\n    \"name\": \"gpd\",\n    \"command\": \"git push --dry-run\",\n    \"type\": \"default\",\n    \"description\": \"Simulate pushing changes to a remote repository.\"\n  },\n  {\n    \"name\": \"gpf!\",\n    \"command\": \"git push --force\",\n    \"type\": \"default\",\n    \"description\": \"Force push to a remote repository, discarding others' changes.\"\n  },\n  {\n    \"name\": \"gpf\",\n    \"command\": \"git push --force-with-lease\",\n    \"type\": \"default\",\n    \"description\": \"Force push to a remote repository while checking if anyone else has pushed changes.\"\n  },\n  {\n    \"name\": \"gpsup\",\n    \"command\": \"git push --set-upstream origin $(git_current_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Push the current branch to the remote repository and set it as the upstream branch.\"\n  },\n  {\n    \"name\": \"gpv\",\n    \"command\": \"git push -v\",\n    \"type\": \"default\",\n    \"description\": \"Push changes to a remote repository with verbose output.\"\n  },\n  {\n    \"name\": \"gpoat\",\n    \"command\": \"git push origin --all && git push origin --tags\",\n    \"type\": \"default\",\n    \"description\": \"Push all local branches and tags to the remote repository.\"\n  },\n  {\n    \"name\": \"ggpush\",\n    \"command\": \"git push origin \\\"$(git_current_branch)\\\"\",\n    \"type\": \"default\",\n    \"description\": \"Push changes to the remote repository for the current branch.\"\n  },\n  {\n    \"name\": \"gpu\",\n    \"command\": \"git push upstream\",\n    \"type\": \"default\",\n    \"description\": \"Push changes to an upstream remote repository.\"\n  },\n  {\n    \"name\": \"grb\",\n    \"command\": \"git rebase\",\n    \"type\": \"default\",\n    \"description\": \"Reapply commits on top of another base tip.\"\n  },\n  {\n    \"name\": \"grba\",\n    \"command\": \"git rebase --abort\",\n    \"type\": \"default\",\n    \"description\": \"Abort the current rebase operation and restore the original branch state.\"\n  },\n  {\n    \"name\": \"grbc\",\n    \"command\": \"git rebase --continue\",\n    \"type\": \"default\",\n    \"description\": \"Continue the rebase operation after resolving conflicts.\"\n  },\n  {\n    \"name\": \"grbo\",\n    \"command\": \"git rebase --onto\",\n    \"type\": \"default\",\n    \"description\": \"Rebase commits on top of another branch.\"\n  },\n  {\n    \"name\": \"grbs\",\n    \"command\": \"git rebase --skip\",\n    \"type\": \"default\",\n    \"description\": \"Skip the current patch in the rebase operation.\"\n  },\n  {\n    \"name\": \"grbi\",\n    \"command\": \"git rebase -i\",\n    \"type\": \"default\",\n    \"description\": \"Rebase interactively, allowing you to edit commits before completing the rebase.\"\n  },\n  {\n    \"name\": \"grbd\",\n    \"command\": \"git rebase $(git_develop_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Rebase the current branch on top of the develop branch.\"\n  },\n  {\n    \"name\": \"grbm\",\n    \"command\": \"git rebase $(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Rebase the current branch on top of the main branch.\"\n  },\n  {\n    \"name\": \"grbom\",\n    \"command\": \"git rebase origin/$(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Rebase the current branch on top of the main branch from the remote repository.\"\n  },\n  {\n    \"name\": \"gr\",\n    \"command\": \"git remote\",\n    \"type\": \"default\",\n    \"description\": \"Manage set of tracked repositories.\"\n  },\n  {\n    \"name\": \"grv\",\n    \"command\": \"git remote -v\",\n    \"type\": \"default\",\n    \"description\": \"List all remote repositories with their URLs.\"\n  },\n  {\n    \"name\": \"gra\",\n    \"command\": \"git remote add\",\n    \"type\": \"default\",\n    \"description\": \"Add a remote repository.\"\n  },\n  {\n    \"name\": \"grrm\",\n    \"command\": \"git remote remove\",\n    \"type\": \"default\",\n    \"description\": \"Remove a remote repository.\"\n  },\n  {\n    \"name\": \"grmv\",\n    \"command\": \"git remote rename\",\n    \"type\": \"default\",\n    \"description\": \"Rename a remote repository.\"\n  },\n  {\n    \"name\": \"grset\",\n    \"command\": \"git remote set-url\",\n    \"type\": \"default\",\n    \"description\": \"Change the URL of a remote repository.\"\n  },\n  {\n    \"name\": \"grup\",\n    \"command\": \"git remote update\",\n    \"type\": \"default\",\n    \"description\": \"Fetch updates from all remote repositories.\"\n  },\n  {\n    \"name\": \"grh\",\n    \"command\": \"git reset\",\n    \"type\": \"default\",\n    \"description\": \"Reset the current HEAD to the specified state.\"\n  },\n  {\n    \"name\": \"gru\",\n    \"command\": \"git reset --\",\n    \"type\": \"default\",\n    \"description\": \"Reset the current HEAD to the specified state, but preserve changes in the working directory.\"\n  },\n  {\n    \"name\": \"grhh\",\n    \"command\": \"git reset --hard\",\n    \"type\": \"default\",\n    \"description\": \"Reset the current HEAD to the specified state, discarding changes in the working directory.\"\n  },\n  {\n    \"name\": \"gpristine\",\n    \"command\": \"git reset --hard && git clean -dffx\",\n    \"type\": \"default\",\n    \"description\": \"Reset the working directory to the last commit and remove untracked files and directories.\"\n  },\n  {\n    \"name\": \"groh\",\n    \"command\": \"git reset origin/$(git_current_branch) --hard\",\n    \"type\": \"default\",\n    \"description\": \"Reset the current branch to match the state of the corresponding branch on the origin remote repository.\"\n  },\n  {\n    \"name\": \"grs\",\n    \"command\": \"git restore\",\n    \"type\": \"default\",\n    \"description\": \"Restore files in the working tree with data from the index.\"\n  },\n  {\n    \"name\": \"grss\",\n    \"command\": \"git restore --source\",\n    \"type\": \"default\",\n    \"description\": \"Restore files in the working tree from the specified source.\"\n  },\n  {\n    \"name\": \"grst\",\n    \"command\": \"git restore --staged\",\n    \"type\": \"default\",\n    \"description\": \"Unstage files in the index, but don't touch the working tree.\"\n  },\n  {\n    \"name\": \"grev\",\n    \"command\": \"git revert\",\n    \"type\": \"default\",\n    \"description\": \"Reverse one or more commits.\"\n  },\n  {\n    \"name\": \"grm\",\n    \"command\": \"git rm\",\n    \"type\": \"default\",\n    \"description\": \"Remove files from the working tree and from the index.\"\n  },\n  {\n    \"name\": \"grmc\",\n    \"command\": \"git rm --cached\",\n    \"type\": \"default\",\n    \"description\": \"Remove files from the index but keep them in the working tree.\"\n  },\n  {\n    \"name\": \"gcount\",\n    \"command\": \"git shortlog -sn\",\n    \"type\": \"show\",\n    \"description\": \"Show the number of commits per author in descending order.\"\n  },\n  {\n    \"name\": \"gsh\",\n    \"command\": \"git show\",\n    \"type\": \"default\",\n    \"description\": \"Show various types of objects (e.g., commits, tags, trees).\"\n  },\n  {\n    \"name\": \"gstall\",\n    \"command\": \"git stash --all\",\n    \"type\": \"default\",\n    \"description\": \"Save changes in the working tree and untracked files to a new stash.\"\n  },\n  {\n    \"name\": \"gstaa\",\n    \"command\": \"git stash apply\",\n    \"type\": \"default\",\n    \"description\": \"Apply the most recently created stash and keep it in the stash list.\"\n  },\n  {\n    \"name\": \"gstc\",\n    \"command\": \"git stash clear\",\n    \"type\": \"default\",\n    \"description\": \"Remove all stashes from the stash list.\"\n  },\n  {\n    \"name\": \"gstd\",\n    \"command\": \"git stash drop\",\n    \"type\": \"default\",\n    \"description\": \"Remove the most recently created stash from the stash list.\"\n  },\n  {\n    \"name\": \"gstl\",\n    \"command\": \"git stash list\",\n    \"type\": \"default\",\n    \"description\": \"List all stashes in the stash list.\"\n  },\n  {\n    \"name\": \"gstp\",\n    \"command\": \"git stash pop\",\n    \"type\": \"default\",\n    \"description\": \"Apply the most recently created stash and remove it from the stash list.\"\n  },\n  {\n    \"name\": \"gsta\",\n    \"command\": \"git stash push\",\n    \"type\": \"default\",\n    \"description\": \"Save changes in the working tree to a new stash.\"\n  },\n  {\n    \"name\": \"gsts\",\n    \"command\": \"git stash show --text\",\n    \"type\": \"default\",\n    \"description\": \"Show the changes recorded in the stash as a diff.\"\n  },\n  {\n    \"name\": \"gst\",\n    \"command\": \"git status\",\n    \"type\": \"default\",\n    \"description\": \"Show the status of the working tree.\"\n  },\n  {\n    \"name\": \"gss\",\n    \"command\": \"git status -s\",\n    \"type\": \"default\",\n    \"description\": \"Show the status of the working tree in short format.\"\n  },\n  {\n    \"name\": \"gsb\",\n    \"command\": \"git status -sb\",\n    \"type\": \"default\",\n    \"description\": \"Show the status of the working tree in a compact format.\"\n  },\n  {\n    \"name\": \"gsi\",\n    \"command\": \"git submodule init\",\n    \"type\": \"default\",\n    \"description\": \"Initialize submodules if they are present in the repository.\"\n  },\n  {\n    \"name\": \"gsu\",\n    \"command\": \"git submodule update\",\n    \"type\": \"default\",\n    \"description\": \"Fetch new commits and update the working tree of all submodules.\"\n  },\n  {\n    \"name\": \"gsd\",\n    \"command\": \"git svn dcommit\",\n    \"type\": \"default\",\n    \"description\": \"Commit local Git changes to a Subversion repository.\"\n  },\n  {\n    \"name\": \"git-svn-dcommit-push\",\n    \"command\": \"git svn dcommit && git push github $(git_main_branch):svntrunk\",\n    \"type\": \"default\",\n    \"description\": \"Commit local Git changes to a Subversion repository and push to a GitHub repository.\"\n  },\n  {\n    \"name\": \"gsr\",\n    \"command\": \"git svn rebase\",\n    \"type\": \"default\",\n    \"description\": \"Fetch new revisions from the Subversion repository and rebase the current branch.\"\n  },\n  {\n    \"name\": \"gsw\",\n    \"command\": \"git switch\",\n    \"type\": \"default\",\n    \"description\": \"Switch branches or restore working tree files.\"\n  },\n  {\n    \"name\": \"gswc\",\n    \"command\": \"git switch -c\",\n    \"type\": \"default\",\n    \"description\": \"Create and switch to a new branch.\"\n  },\n  {\n    \"name\": \"gswd\",\n    \"command\": \"git switch $(git_develop_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Switch to the develop branch.\"\n  },\n  {\n    \"name\": \"gswm\",\n    \"command\": \"git switch $(git_main_branch)\",\n    \"type\": \"default\",\n    \"description\": \"Switch to the main branch.\"\n  },\n  {\n    \"name\": \"gts\",\n    \"command\": \"git tag -s\",\n    \"type\": \"default\",\n    \"description\": \"Create a signed tag object.\"\n  },\n  {\n    \"name\": \"gtv\",\n    \"command\": \"git tag | sort -V\",\n    \"type\": \"default\",\n    \"description\": \"List tags in version order.\"\n  },\n  {\n    \"name\": \"gignore\",\n    \"command\": \"git update-index --assume-unchanged\",\n    \"type\": \"default\",\n    \"description\": \"Ignore future changes to a file that is already tracked by Git.\"\n  },\n  {\n    \"name\": \"gunignore\",\n    \"command\": \"git update-index --no-assume-unchanged\",\n    \"type\": \"default\",\n    \"description\": \"Stop ignoring changes to a file that is already tracked by Git.\"\n  },\n  {\n    \"name\": \"gwt\",\n    \"command\": \"git worktree\",\n    \"type\": \"default\",\n    \"description\": \"Manage multiple working trees associated with the repository.\"\n  },\n  {\n    \"name\": \"gwta\",\n    \"command\": \"git worktree add\",\n    \"type\": \"default\",\n    \"description\": \"Add a new working tree.\"\n  },\n  {\n    \"name\": \"gwtls\",\n    \"command\": \"git worktree list\",\n    \"type\": \"default\",\n    \"description\": \"List all linked working trees.\"\n  },\n  {\n    \"name\": \"gwtmv\",\n    \"command\": \"git worktree move\",\n    \"type\": \"default\",\n    \"description\": \"Move a working tree to a new location.\"\n  },\n  {\n    \"name\": \"gwtrm\",\n    \"command\": \"git worktree remove\",\n    \"type\": \"default\",\n    \"description\": \"Remove a working tree.\"\n  },\n  {\n    \"name\": \"gbg\",\n    \"command\": \"git branch -vv | grep \\\": gone\\\\]\\\"\",\n    \"description\": \"Shows local branches that have been deleted on the remote repository.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gbgD\",\n    \"command\": \"git branch --no-color -vv | grep \\\": gone\\\\]\\\" | awk '{print $1}' | xargs git branch -D\",\n    \"description\": \"Forcefully deletes local branches that have been deleted on the remote repository.\",\n    \"type\": \"delete\"\n  },\n  {\n    \"name\": \"gbgd\",\n    \"command\": \"git branch --no-color -vv | grep \\\": gone\\\\]\\\" | awk '{print $1}' | xargs git branch -d\",\n    \"description\": \"Deletes local branches that have been deleted on the remote repository.\",\n    \"type\": \"delete\"\n  },\n  {\n    \"name\": \"gdct\",\n    \"command\": \"git describe --tags $(git rev-list --tags --max-count=1)\",\n    \"description\": \"Shows the description of the most recent tag.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gfa\",\n    \"command\": \"git fetch --all --prune --jobs=10\",\n    \"description\": \"Downloads all branches and the latest changes from the remote repository.\",\n    \"type\": \"edit\"\n  },\n  {\n    \"name\": \"ggsup\",\n    \"command\": \"git branch --set-upstream-to=origin/$(git_current_branch)\",\n    \"description\": \"Sets the current branch to track the corresponding branch on the remote repository.\",\n    \"type\": \"edit\"\n  },\n  {\n    \"name\": \"gk\",\n    \"command\": \"\\\\gitk --all --branches &!\",\n    \"description\": \"Opens the GitK graphical interface to visualize commit history.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gke\",\n    \"command\": \"\\\\gitk --all $(git log --walk-reflogs --pretty=%h) &!\",\n    \"description\": \"Opens the GitK graphical interface and shows referenced commits.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"glgm\",\n    \"command\": \"git log --graph --max-count=10\",\n    \"description\": \"Shows commit history in a graphical format, limited to the last 10 commits.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"glod\",\n    \"command\": \"git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'\",\n    \"description\": \"Shows commit history in a detailed and colorful graphical format.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"glods\",\n    \"command\": \"git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short\",\n    \"description\": \"Shows commit history in a detailed, colorful, and short date format graphical format.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"glol\",\n    \"command\": \"git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\",\n    \"description\": \"Shows commit history in a detailed graphical format along with relative dates.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"glola\",\n    \"command\": \"git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --all\",\n    \"description\": \"Shows commit history of all branches in a detailed graphical format along with relative dates.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"glols\",\n    \"command\": \"git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --stat\",\n    \"description\": \"Shows commit history in a detailed graphical format along with relative dates and change statistics.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"glp\",\n    \"command\": \"_git_log_prettily\",\n    \"description\": \"Custom function to show commit history in a predefined format.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gms\",\n    \"command\": \"git merge --squash\",\n    \"description\": \"Merges changes from one branch into another without creating a merge commit.\",\n    \"type\": \"edit\"\n  },\n  {\n    \"name\": \"gmtlvim\",\n    \"command\": \"git mergetool --no-prompt --tool=vimdiff\",\n    \"description\": \"Opens the Git merging tool in Vimdiff mode to resolve conflicts.\",\n    \"type\": \"edit\"\n  },\n  {\n    \"name\": \"gpod\",\n    \"command\": \"git push origin --delete\",\n    \"description\": \"Deletes a branch from the remote repository.\",\n    \"type\": \"delete\"\n  },\n  {\n    \"name\": \"gpsupf\",\n    \"command\": \"git push --set-upstream origin $(git_current_branch) --force-with-lease --force-if-includes\",\n    \"description\": \"Sends local changes to the remote repository and sets the corresponding branch to track.\",\n    \"type\": \"edit\"\n  },\n  {\n    \"name\": \"grep\",\n    \"command\": \"grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}\",\n    \"description\": \"Searches for patterns in files or directories, excluding common directories.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"grt\",\n    \"command\": \"cd \\\"$(git rev-parse --show-toplevel || echo .)\\\"\",\n    \"description\": \"Navigates to the root directory of the current repository.\",\n    \"type\": \"edit\"\n  },\n  {\n    \"name\": \"gsps\",\n    \"command\": \"git show --pretty=short --show-signature\",\n    \"description\": \"Shows detailed information about a specific commit and its digital signature, if any.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gtl\",\n    \"command\": \"gtl(){ git tag --sort=-v:refname -n --list \\\"${1}*\\\" }; noglob gtl\",\n    \"description\": \"Shows tags matching a specific pattern and sorts them in descending version order.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gupomi\",\n    \"command\": \"git pull --rebase=interactive origin $(git_main_branch)\",\n    \"description\": \"Updates the current branch by interactive rebase from the main branch of the remote repository.\",\n    \"type\": \"edit\"\n  },\n  {\n    \"name\": \"gwch\",\n    \"command\": \"git whatchanged -p --abbrev-commit --pretty=medium\",\n    \"description\": \"Shows the changes made in each commit along with their summaries.\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"ggpnp\",\n    \"command\": \"ggl && ggp\",\n    \"description\": \"Pull changes from the remote repository for the current branch and push your changes to the remote repository.\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"ggpur\",\n    \"command\": \"git pull --rebase origin $(current_branch)\",\n    \"description\": \"Pull changes from the remote repository for the current branch and rebase your changes on top of it.\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gbsn\",\n    \"command\": \"git bisect new\",\n    \"description\": \"Start a git bisect session to find the commit that introduced a bug\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gbso\",\n    \"command\": \"git bisect old\",\n    \"description\": \"Mark a commit as not containing the bug being bisected\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gbm\",\n    \"command\": \"git branch --move\",\n    \"description\": \"Rename a git branch\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gccd\",\n    \"command\": \"git clone --recurse-submodules \\\"$@\\\" && cd \\\"$(basename $_ .git)\\\"\",\n    \"description\": \"Clone a Git repository recursively and change to the new directory\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gdv\",\n    \"command\": \"git diff -w \\\"$@\\\" | view -\",\n    \"description\": \"Show diff output for files in the working tree through an external pager\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gdnolock\",\n    \"command\": \"git diff $@ \\\":(exclude)package-lock.json\\\" \\\":(exclude)\\\\*.lock\\\"\",\n    \"description\": \"Show diff output excluding package-lock.json and other lock files\",\n    \"type\": \"show\"\n  },\n  {\n    \"name\": \"gprv\",\n    \"command\": \"git pull --rebase -v\",\n    \"description\": \"Pull with rebase from the remote repository verbosely\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gpra\",\n    \"command\": \"git pull --rebase --autostash\",\n    \"description\": \"Pull with rebase from the remote repository, stashing local changes\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gprav\",\n    \"command\": \"git pull --rebase --autostash -v\",\n    \"description\": \"Pull with rebase from remote verbosely, stashing local changes\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gprom\",\n    \"command\": \"git pull --rebase origin $(git_main_branch)\",\n    \"description\": \"Pull main branch from origin with rebase\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gpromi\",\n    \"command\": \"git pull --rebase=interactive origin $(git_main_branch)\",\n    \"description\": \"Interactively rebase main branch from origin\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"ggl\",\n    \"command\": \"git pull origin $(current_branch)\",\n    \"description\": \"Pull the current branch from origin\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"ggf\",\n    \"command\": \"git push --force origin $(current_branch)\",\n    \"description\": \"Force push the current branch to origin\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"ggfl\",\n    \"command\": \"git push --force-with-lease origin $(current_branch)\",\n    \"description\": \"Force push the current branch to origin if you have the latest changes\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"ggp\",\n    \"command\": \"git push origin $(current_branch)\",\n    \"description\": \"Push the current branch to origin\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"grhk\",\n    \"command\": \"git reset --keep\",\n    \"description\": \"Reset the index preserving working tree changes\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"grhs\",\n    \"command\": \"git reset --soft\",\n    \"description\": \"Soft reset the index to a commit, keeping changes\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gstu\",\n    \"command\": \"git stash --include-untracked\",\n    \"description\": \"Stash including untracked files\",\n    \"type\": \"default\"\n  },\n  {\n    \"name\": \"gta\",\n    \"command\": \"git tag --annotate\",\n    \"description\": \"Annotate a tag with the tagger name, email, date, and message\",\n    \"type\": \"show\"\n  }\n]\n", "import { Detail } from \"@raycast/api\";\nimport { typeColor, typeDescription } from \"./utils\";\nimport { Alias } from \"./types\";\n\nexport default function CommandDetail({ alias }: { alias: Alias }) {\n  const markdown = `\n# ${alias.name}\n###\n\\`\\`\\`\n${alias.command}\n\\`\\`\\`\n\n## ${alias.description}\n###\n\\`${alias.type}\\` ${typeDescription(alias.type)}\n`;\n  return (\n    <Detail\n      markdown={markdown}\n      metadata={\n        <Detail.Metadata>\n          <Detail.Metadata.TagList title=\"\">\n            <Detail.Metadata.TagList.Item text={alias.name} color={typeColor(alias.type)} />\n          </Detail.Metadata.TagList>\n          <Detail.Metadata.TagList title=\"Type\">\n            <Detail.Metadata.TagList.Item text={alias.type} color={typeColor(alias.type)} />\n          </Detail.Metadata.TagList>\n          <Detail.Metadata.Separator />\n          <Detail.Metadata.Link\n            title=\"Reference\"\n            target=\"https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/README.md\"\n            text=\"Ohmyzsh Plugin Readme\"\n          />\n        </Detail.Metadata>\n      }\n    />\n  );\n}\n"],
  "mappings": "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",
  "names": ["search_commands_exports", "__export", "Command", "__toCommonJS", "import_api", "import_api", "alias_default", "preferences", "showDescription", "showTypeColor", "getData", "alias_default", "typeColor", "type", "typeDescription", "import_api", "import_jsx_runtime", "CommandDetail", "alias", "markdown", "typeDescription", "typeColor", "import_jsx_runtime", "Command", "aliases", "getData", "alias", "showDescription", "typeColor", "CommandDetail"]
}
